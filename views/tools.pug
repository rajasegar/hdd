include _featurette
main
  .container.marketing
    .row
      .col-md-12
        .p-5.mb-4.bg-light.rounded-3
          .container-fluid.py-1
            h1.display-5.fw-bold Tools
            p.col-md-8.fs-4
              | In this section, we will look at some of the amazing frameworks and libraries that promote some or most of the values of HTML Driven Development.

      hr.featurette-divider

      +featurette("htmx", "/images/htmx-500.jpg", "https://htmx.org")
        p.lead
          | <a href="https://htmx.org">htmx</a> allows you to access AJAX, CSS Transitions, WebSockets and Server Sent Events directly in HTML, using attributes, so you can build modern user interfaces with the simplicity and power of hypertext. htmx is small (~10k min.gz'd), dependency-free, extendable & IE11 compatible
        p.lead htmx is a library that allows you to access modern browser features directly from HTML, rather than using javascript.  htmx extends and generalizes the core idea of HTML as a hypertext, opening up many more possibilities directly within the language. Any element, not just anchors and forms, can issue an HTTP request. Any event, not just clicks or form submissions, can trigger requests. Any element, not just the entire window, can be the target for update by the request.

      hr.featurette-divider

      +featurette-alt("hotwire","/images/hotwire-500.jpg", "https://hotwire.dev")
        p.lead <a href="https://hotwire.dev">Hotwire</a> is an alternative approach to building modern web applications without using much JavaScript by sending HTML instead of JSON over the wire. This makes for fast first-load pages, keeps template rendering on the server, and allows for a simpler, more productive development experience in any programming language, without sacrificing any of the speed or responsiveness associated with a traditional single-page application.

      hr.featurette-divider

      +featurette("Phoenix LiveView","/images/phoenix-500.jpg","https://github.com/phoenixframework/phoenix_live_view")
        p.lead
          | <a href="https://github.com/phoenixframework/phoenix_live_view">Phoenix LiveView</a> enables rich, real-time user experiences with server-rendered HTML. The LiveView programming model is declarative: instead of saying "once event X happens, change Y on the page", events in LiveView are regular messages which may cause changes to its state. Once the state changes, LiveView will re-render the relevant parts of its HTML template and push it to the browser, which updates itself in the most efficient manner. This means developers write LiveView templates as any other server-rendered HTML and LiveView does the hard work of tracking changes and sending the relevant diffs to the browser.

      hr.featurette-divider

      +featurette-alt("Laravel Livewire", "/images/livewire-500.jpg", "https://laravel-livewire.com/")
        p.lead
          | <a href="https://laravel-livewire.com">Livewire</a> is a full-stack framework for Laravel that makes building dynamic interfaces simple, without leaving the comfort of Laravel.

      hr.featurette-divider

      +featurette('Marko','/images/marko-500.jpg','https://markojs.com')
        p.lead
          | <a href="https://markojs.com">Marko</a> is HTML re-imagined as a language for building dynamic and reactive user interfaces. Just about any valid HTML is valid Marko, but Marko extends the HTML language to allow building modern applications in a declarative way.

      hr.featurette-divider

      +featurette-alt("Astro",'images/astro-500.jpg', 'https://astro.build')
        p.lead
          | Build faster websites with less client-side Javascript.  For a technology built on top of three different languages, the modern web seems to focus an awful lot on JavaScript. We don’t think it has to—and that’s certainly not a revolutionary concept.

        p.lead We’ll eagerly jump at the chance to sing JavaScript’s praises, but HTML and CSS are pretty great too. There aren’t enough modern tools which reflect that, which is why we're building <a href="https://astro.build">Astro</a>.

        p.lead While we’re at it, it’s time to accept that the framework wars won’t have a winner—that’s why Astro lets you use any framework you want (or none at all). And if most sites only have islands of interactivity, shouldn’t our tools optimize for that? We’re not the first to ask the question, but we might be the first with an answer for every framework.

      hr.featurette-divider

      +featurette('Sockpuppet','images/sockpuppet-500.jpg', 'https://sockpuppet.argpar.se/')
        p.lead
          | <a href="https://sockpuppet.argpar.se">Sockpuppet</a> is a new way to craft modern, reactive web interfaces with Django. We extend the capabilities of both Django and Stimulus by intercepting user interactions and passing them to Django over real-time websockets. These interactions are processed by Reflex actions that change application state. The current page is quickly re-rendered and the changes are sent to the client. The page is then morphed to reflect the new application state. This entire round-trip allows us to update the UI in 20-30ms without flicker or expensive page loads.

      hr.featurette-divider
      +featurette-alt('Unpoly', 'images/unpoly-500.jpg', 'https://unpoly.com/')
        p.lead
          | The <a href="https://unpoly.com">unobtrusive JavaScript framework</a> for server-side web applications Unpoly enables fast and flexible frontends while keeping rendering logic on the server. It has no dependencies and plays nice with existing code.

      hr.featurette-divider
      +featurette('Alpine.js', 'images/alpine-500.jpg','https://github.com/alpinejs/alpine')
        p.lead
          | A rugged, minimal framework for composing JavaScript behavior in your markup. <a href="https://github.com/alpinejs/alpine">Alpine.js</a> offers you the reactive and declarative nature of big frameworks like Vue or React at a much lower cost. You get to keep your DOM, and sprinkle in behavior as you see fit.

      hr.featurette-divider
      +featurette-alt('Inertia.js', 'images/inertia-500.jpg','https://inertiajs.com')
        p.lead
          | Build single-page apps, without building an API.  <a href="https://inertiajs.com">Inertia.js</a> lets you quickly build modern single-page React, Vue and Svelte apps using classic server-side routing and controllers.
        p.lead
          | Inertia is a new approach to building classic server-driven web apps. We call it the modern monolith.
        p.lead Inertia allows you to create fully client-side rendered, single-page apps, without much of the complexity that comes with modern SPAs. It does this by leveraging existing server-side frameworks.
        p.lead Inertia has no client-side routing, nor does it require an API. Simply build controllers and page views like you've always done!


